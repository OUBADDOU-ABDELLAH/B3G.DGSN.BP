È
RC:\Users\ITAdministrator\source\repos\B3G.DGSN\B3G.DGSN.REPOSITORY\CRUDMethodes.cs
	namespace 	
B3G
 
. 
DGSN 
. 

REPOSITORY 
{		 
public

 

class

 
CRUDMethodes

 
<

 
T

 
>

  
:

! "
IGeneriqueCRUD

# 1
<

1 2
T

2 3
>

3 4
where

5 :
T

; <
:

= >
class

? D
{ 
private 
DBContextDGSN 
_context &
;& '
public 
CRUDMethodes 
( 
DBContextDGSN )
context* 1
)1 2
{3 4
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
T 
> 
Add  
(  !
T! "
session# *
)* +
{ 	
_context 
. 
Set 
< 
T 
> 
( 
) 
. 
AddAsync &
(& '
session' .
). /
;/ 0
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
return 
session 
; 
} 	
public 
async 
Task 
< 
T 
> 
GetByIdAsync )
() *
string* 0
id1 3
)3 4
{ 	
return 
await 
_context !
.! "
Set" %
<% &
T& '
>' (
(( )
)) *
.* +
	FindAsync+ 4
(4 5
id5 7
)7 8
;8 9
} 	
public 
bool 
isSessionExist "
(" #
string# )
id* ,
), -
{ 	
return 
( 
_context 
. 
Sessions %
?% &
.& '
Any' *
(* +
e+ ,
=>- /
e0 1
.1 2
state2 7
==8 :
id; =
)= >
)> ?
.? @
GetValueOrDefault@ Q
(Q R
)R S
;S T
}   	
}## 
}$$ Ü
SC:\Users\ITAdministrator\source\repos\B3G.DGSN\B3G.DGSN.REPOSITORY\DBContextDGSN.cs
	namespace 	
B3G
 
. 
DGSN 
. 

REPOSITORY 
{ 
public 

class 
DBContextDGSN 
:  
	DbContext! *
{ 
public

 
DBContextDGSN

 
(

 
DbContextOptions

 -
<

- .
DBContextDGSN

. ;
>

; <
options

= D
)

D E
:

F G
base

H L
(

L M
options

M T
)

T U
{ 	
} 	
public 
DbSet 
< 
Session 
> 
Sessions &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} þ
^C:\Users\ITAdministrator\source\repos\B3G.DGSN\B3G.DGSN.REPOSITORY\Interface\IGeneriqueCRUD.cs
	namespace 	
B3G
 
. 
DGSN 
. 

REPOSITORY 
. 
	Interface '
{ 
public 

	interface 
IGeneriqueCRUD #
<# $
T$ %
>% &
{ 
Task 
< 
T 
> 
GetByIdAsync 
( 
string #
id$ &
)& '
;' (
Task 
< 
T 
> 
Add 
( 
T 
session 
) 
; 
public

 
bool

 
isSessionExist

 "
(

" #
string

# )
id

* ,
)

, -
;

- .
} 
} þ
gC:\Users\ITAdministrator\source\repos\B3G.DGSN\B3G.DGSN.REPOSITORY\Migrations\20230509233450_initMig.cs
	namespace 	
B3G
 
. 
DGSN 
. 

REPOSITORY 
. 

Migrations (
{ 
public 

partial 
class 
initMig  
:! "
	Migration# ,
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 
state 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
falseR W
)W X
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 2
,2 3
x4 5
=>6 8
x9 :
.: ;
state; @
)@ A
;A B
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str  
)  !
;! "
} 	
} 
}   